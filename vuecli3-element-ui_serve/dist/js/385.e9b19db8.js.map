{"version":3,"file":"js/385.e9b19db8.js","mappings":"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","sources":["webpack://vuecli2-element-ui/./src/views/categories/Categories.vue","webpack://vuecli2-element-ui/src/views/categories/Categories.vue","webpack://vuecli2-element-ui/./src/views/categories/Categories.vue?7fce","webpack://vuecli2-element-ui/./src/views/categories/Categories.vue?840e"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"categories\"},[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-button',{staticClass:\"buttonTop\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCategories}},[_vm._v(\"添加分类\")]),_c('el-row',[_c('el-col')],1),_c('tree-table',{attrs:{\"data\":_vm.categoriesList,\"columns\":_vm.columns,\"show-index\":\"\",\"selection-type\":false,\"expand-type\":false,\"index-text\":\"#\",\"border\":\"\",\"show-row-hover\":false},scopedSlots:_vm._u([{key:\"isok\",fn:function(scope){return [(scope.row.cat_deleted === false)?_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}}):_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"lightblue\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level == '0')?_c('el-tag',{attrs:{\"type\":\"success\"}},[_vm._v(\"一级\")]):(scope.row.cat_level == '1')?_c('el-tag',{attrs:{\"type\":\"info\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"type\":\"warning\"}},[_vm._v(\"三级\")])]}},{key:\"orders\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.ShowCategoriesDialog(scope.row.cat_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.removeInfoById(scope.row.cat_id)}}},[_vm._v(\"删除\")])]}}])}),_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pagenum,\"page-sizes\":[3, 5, 10, 15],\"page-size\":_vm.queryInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.categoriesDialogVisible,\"width\":\"40%\"},on:{\"update:visible\":function($event){_vm.categoriesDialogVisible=$event},\"close\":_vm.categoriesDialogClose}},[_c('el-form',{ref:\"addCategoriesFormRef\",attrs:{\"model\":_vm.addCategoriesForm,\"rules\":_vm.addCategoriesFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称:\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCategoriesForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCategoriesForm, \"cat_name\", $$v)},expression:\"addCategoriesForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类:\"}},[_c('el-cascader',{attrs:{\"options\":_vm.parentCateList,\"props\":{ ..._vm.cascaderProps,expandTrigger: 'hover', checkStrictly: 'true' },\"clearable\":\"\",\"show-all-levels\":\"\"},on:{\"change\":_vm.parentCateChanged},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('span',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.categoriesDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCategoriesY}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"分类名称\",\"visible\":_vm.isShowCategoriesEditDialog,\"width\":\"40%\"},on:{\"update:visible\":function($event){_vm.isShowCategoriesEditDialog=$event}}},[_c('el-form',{ref:\"isShowCategoriesFormRef\",attrs:{\"model\":_vm.CategoriesEditForm,\"rules\":_vm.isShowCategoriesFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称:\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.CategoriesEditForm.cat_name),callback:function ($$v) {_vm.$set(_vm.CategoriesEditForm, \"cat_name\", $$v)},expression:\"CategoriesEditForm.cat_name\"}})],1)],1),_c('span',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.isShowCategoriesEditDialog = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCategoriesEditForm}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"分类名称\",\"visible\":_vm.isShowCategoriesEditDialog,\"width\":\"40%\"},on:{\"update:visible\":function($event){_vm.isShowCategoriesEditDialog=$event}}},[_c('el-form',{ref:\"isShowCategoriesFormRef\",attrs:{\"model\":_vm.CategoriesEditForm,\"rules\":_vm.isShowCategoriesFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称:\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.CategoriesEditForm.cat_name),callback:function ($$v) {_vm.$set(_vm.CategoriesEditForm, \"cat_name\", $$v)},expression:\"CategoriesEditForm.cat_name\"}})],1)],1),_c('span',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.isShowCategoriesEditDialog = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCategoriesEditForm}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <!-- 商品管理 商品分类 -->\r\n  <div class=\"categories\">\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片 -->\r\n    <el-card>\r\n      <!-- 添加分类 -->\r\n      <el-button @click=\"addCategories\" class=\"buttonTop\" type=\"primary\">添加分类</el-button>\r\n      <!-- 行 -->\r\n      <el-row>\r\n        <!-- 列 -->\r\n        <el-col  >\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 导入的第三方插件 树形控件   selection选择框   expand 展开符    -->\r\n      <tree-table :data=\"categoriesList\" :columns=\"columns\" show-index :selection-type=\"false\" :expand-type=\"false\" index-text=\"#\" border :show-row-hover=\"false\" >\r\n        <!-- 是否有效 -->\r\n        <template slot=\"isok\" slot-scope=\"scope\">\r\n          <i class=\"el-icon-success\" style=\"color: lightgreen\" v-if=\"scope.row.cat_deleted === false\"></i>\r\n          <i class=\"el-icon-error\" style=\"color: lightblue\" v-else></i>\r\n        </template>\r\n        <!-- 排序 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag type=\"success\" v-if=\"scope.row.cat_level == '0'\">一级</el-tag>\r\n          <el-tag type=\"info\" v-else-if=\"scope.row.cat_level == '1'\">二级</el-tag>\r\n          <el-tag type=\"warning\" v-else>三级</el-tag>\r\n        </template>\r\n        <template slot=\"orders\" slot-scope=\"scope\">\r\n          <!-- 美化标签 -->\r\n          <!-- <pre>\r\n            {{scope.row}}\r\n          </pre> -->\r\n          <el-button @click=\"ShowCategoriesDialog(scope.row.cat_id)\" size=\"mini\" type=\"success\">编辑</el-button>\r\n          <el-button @click=\"removeInfoById(scope.row.cat_id)\" size=\"mini\" type=\"danger\">删除</el-button>\r\n        </template>\r\n      </tree-table>\r\n\r\n      <!-- Pagination 分页    size-change 监听 每页有几条数据 发生的改变    current-change 当前页码值 发生改变触发-->\r\n      <el-pagination\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"queryInfo.pagenum\"\r\n      :page-sizes=\"[3, 5, 10, 15]\"\r\n      :page-size=\"queryInfo.pagesize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\">\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加分类按钮 -->\r\n    <el-dialog title=\"添加分类\" :visible.sync=\"categoriesDialogVisible\" width=\"40%\" @close=\"categoriesDialogClose\" >\r\n      <el-form :model=\"addCategoriesForm\" :rules=\"addCategoriesFormRules\" ref=\"addCategoriesFormRef\" label-width=\"100px\" >\r\n        <el-form-item label=\"分类名称:\" prop=\"cat_name\">\r\n          <el-input v-model=\"addCategoriesForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类:\">\r\n          <!-- Cascader 级联选择器  options指定数据源 props指定配置对象  v-model双向绑定数据到显示框中 change数据发生改变触发 -->\r\n          <el-cascader v-model=\"selectedKeys\" :options=\"parentCateList\" :props=\"{ ...cascaderProps,expandTrigger: 'hover', checkStrictly: 'true' }\" @change=\"parentCateChanged\" clearable show-all-levels></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" >\r\n        <el-button @click=\"categoriesDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCategoriesY\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 点击操作修改按钮 弹出对话框 -->\r\n    <el-dialog title=\"分类名称\" :visible.sync=\"isShowCategoriesEditDialog\" width=\"40%\" >\r\n      <el-form :model=\"CategoriesEditForm\" :rules=\"isShowCategoriesFormRules\" ref=\"isShowCategoriesFormRef\" label-width=\"100px\" >\r\n        <el-form-item label=\"分类名称:\" prop=\"cat_name\">\r\n          <el-input v-model=\"CategoriesEditForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" >\r\n        <el-button @click=\"isShowCategoriesEditDialog = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCategoriesEditForm\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 点击操作删除按钮 弹出对话框 -->\r\n    <el-dialog title=\"分类名称\" :visible.sync=\"isShowCategoriesEditDialog\" width=\"40%\" >\r\n      <el-form :model=\"CategoriesEditForm\" :rules=\"isShowCategoriesFormRules\" ref=\"isShowCategoriesFormRef\" label-width=\"100px\" >\r\n        <el-form-item label=\"分类名称:\" prop=\"cat_name\">\r\n          <el-input v-model=\"CategoriesEditForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" >\r\n        <el-button @click=\"isShowCategoriesEditDialog = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCategoriesEditForm\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 查询条件\r\n      queryInfo: {\r\n        // 有几层\r\n        type: 3,\r\n        // 当前页码\r\n        pagenum: 1,\r\n        // 每页有几条数据\r\n        pagesize: 5\r\n      },\r\n      // 商品分类数据\r\n      categoriesList: [],\r\n      // 总数据条数\r\n      total: 0,\r\n      // 导入的树形控件 指定列\r\n      columns: [{\r\n        label: '分类名称',\r\n        prop: 'cat_name'\r\n      },\r\n      // 自定义模板\r\n      {\r\n        label: '是否有效',\r\n        // 表示 当前列 定义为模板列\r\n        type: 'template',\r\n        // 表示 当前这一列使用的模板名称\r\n        template: 'isok'\r\n      },\r\n      {\r\n        label: '排序',\r\n        // 表示 当前列 定义为模板列\r\n        type: 'template',\r\n        // 表示 当前这一列使用的模板名称\r\n        template: 'order'\r\n      },\r\n      {\r\n        label: '操作',\r\n        // 表示 当前列 定义为模板列\r\n        type: 'template',\r\n        // 表示 当前这一列使用的模板名称\r\n        template: 'orders'\r\n      }\r\n      ],\r\n\r\n      // 添加分类 对话框\r\n      categoriesDialogVisible : false,\r\n      // 添加分类表单的数据对象  添加分类按钮\r\n      addCategoriesForm: {\r\n        // 添加分类名称\r\n        cat_name: '',\r\n        // 父级分类id 0表示一级父级\r\n        cat_pid: 0,\r\n        // 分类等级 默认添加的是一级分类\r\n        cat_level: 0,\r\n      },\r\n      // 添加分类表单 验证\r\n      addCategoriesFormRules: {\r\n        cat_name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\r\n          { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n        ],\r\n      },\r\n\r\n      // 级联选择器  父级分类列表\r\n      parentCateList: [],\r\n      // 指定级联选择器配置对象\r\n      cascaderProps: {\r\n        // 选中的值\r\n        value: 'cat_id',\r\n        // 看到的值\r\n        label: 'cat_name',\r\n        // 嵌套的属性\r\n        children: 'children'\r\n      },\r\n      // 选中的父级分类id数组\r\n      selectedKeys: [],\r\n\r\n      // 点击操作里面的编辑按钮 是否显示对话框\r\n      isShowCategoriesEditDialog: false,\r\n      // 根据id请求到的数据 保存\r\n      CategoriesEditForm: '',\r\n      // 验证规则\r\n      isShowCategoriesFormRules: {\r\n        cat_name: [\r\n           { required: true, message: '输入用户名', trigger: 'blur' },\r\n           { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n        ],\r\n        region: [\r\n            { required: true, message: '请选择活动区域', trigger: 'change' }\r\n        ],\r\n      },\r\n\r\n      // 点击操作里面的编辑按钮  删除信息对话框\r\n      isDangerEditDialog : false\r\n    }\r\n  },\r\n  created() {\r\n    this.getCategoriesList()\r\n  },\r\n  methods: {\r\n    // 获取商品分类数据\r\n    async getCategoriesList() {\r\n      // get 请求需要传递参数 params\r\n      const { data: res} = await this.$http.get('categories', {params: this.queryInfo} )\r\n      console.log(res)\r\n      if(res.meta.status !== 200) return this.$message.error('获取分类数据失败')\r\n      this.$notify.success(res.meta.msg + '分类数据')\r\n      this.categoriesList = res.data.result\r\n      this.total = res.data.total\r\n    },\r\n    // 监听 pagesize 改变的事件     当前点击的 每页有几条数据 触发  newPageSize 当前 每页有几条数据\r\n    handleSizeChange(newPageSize) {\r\n      this.queryInfo.pagesize = newPageSize\r\n      this.getCategoriesList()\r\n    },\r\n    // 监听 pagenum(当前页码值) 改变的事件  当前点击 页码值 触发    newPageNum 当前所有的页码值\r\n    handleCurrentChange(newPageNum) {\r\n      this.queryInfo.pagenum = newPageNum\r\n      this.getCategoriesList()\r\n    },\r\n\r\n    // 点击 添加分类按钮\r\n    addCategories() {\r\n      // 获取分类数据\r\n      this.getParentCateList()\r\n      // 显示添加分类 对话框 \r\n      this.categoriesDialogVisible = true\r\n    },\r\n    // 获取添加分类数据 点击添加分类按钮\r\n    async getParentCateList() {\r\n      const {data: res} = await this.$http.get('categories', {params: {type: 2}})\r\n      console.log(res)\r\n      this.parentCateList = res.data\r\n    }, \r\n    // 级联选择器数据发生改变触发  @change      b站 P108\r\n    parentCateChanged() {\r\n      console.log(this.selectedKeys)\r\n      // 添加分类数据 判断分类id和分类等级 如果选中的父级分类数组长度 大于0表示不是一级分类  否则是一级分类\r\n      if (this.selectedKeys.length > 0) {\r\n        // 父级分类id\r\n        this.addCategoriesForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\r\n        this.addCategoriesForm.cat_level = this.selectedKeys.length\r\n      } else {\r\n        // 否者是一级分类\r\n        this.addCategoriesForm.cat_pid = 0\r\n        this.addCategoriesForm.cat_level = 0\r\n      }\r\n    },\r\n    // 点击添加按钮 弹出的对话框确认\r\n    addCategoriesY() {\r\n      // console.log(this.addCategoriesForm)\r\n      // 提交前先进行验证表单\r\n      this.$refs.addCategoriesFormRef.validate(async valid => {\r\n        if (!valid) return      // valid表示验证通过    验证未通过 return\r\n        // 验证通过发起请求   this.addCategoriesForm 请求体\r\n        const {data: res} = await this.$http.post('categories', this.addCategoriesForm)\r\n        console.log(res)\r\n        if (res.meta.status !== 201) return this.$message.error('添加分类数据失败')\r\n        this.$message.success(res.meta.msg + '分类数据添加成功')\r\n        this.getCategoriesList() \r\n        this.categoriesDialogVisible = false\r\n      })\r\n    },\r\n    // 分类对话框关闭 触发\r\n    categoriesDialogClose() {\r\n      // 获取到需要清空的元素\r\n      this.$refs.addCategoriesFormRef.resetFields()\r\n      // 重置级联选择框  重置里面的属性\r\n      this.addCategoriesForm.cat_pid = 0\r\n      this.addCategoriesForm.cat_level = 0\r\n      this.selectedKeys = []\r\n    },\r\n\r\n    // 点击操作里面的编辑按钮\r\n    async ShowCategoriesDialog(id) {\r\n      const {data: res} = await this.$http.get('categories/' + id)\r\n      console.log(res)\r\n      if (res.meta.status !== 200) return this.$message.error('获取修改分类数据失败')\r\n      this.CategoriesEditForm = res.data\r\n      // 弹出编辑对话框\r\n      this.isShowCategoriesEditDialog = true\r\n    },\r\n    // 点击操作里面的编辑按钮 里面的确定\r\n    addCategoriesEditForm() {\r\n      // 验证表单内容\r\n      this.$refs.isShowCategoriesFormRef.validate(async valid => {\r\n        // 没验证通过\r\n        if (!valid) {\r\n          return this.$message.error('请填写正确的验证规则')\r\n        } else {\r\n          // 调用修改分类表单请求\r\n          const {data :res} = await this.$http.put('categories/' + this.CategoriesEditForm.cat_id, { \r\n            cat_name: this.CategoriesEditForm.cat_name\r\n          })\r\n          console.log(res)\r\n          // 提示修改分类数据成功\r\n          this.$notify.info(res.meta.msg)\r\n        }\r\n        // 重新获取数据\r\n        this.getCategoriesList()\r\n        // 关闭编辑对话框\r\n        this.isShowCategoriesEditDialog = false\r\n      })\r\n    },\r\n    // 点击操作里面的删除按钮\r\n    async removeInfoById(id) {\r\n      // 弹出删除信息对话框\r\n      this.isDangerEditDialog = true\r\n      // 弹框询问用户是否删除\r\n      const confirmResult = await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      // }).catch(err => {\r\n      //   return err\r\n      // })\r\n      }).catch(err => err)\r\n      console.log(confirmResult)\r\n      // 点击确认 返回 confirm\r\n      // 点击取消 返回 cancel\r\n      if (confirmResult !== 'confirm') return this.$notify.info('点击了取消')\r\n      this.$message.success('点击确认 删除成功了')\r\n      // 发送请求 进行删除用户信息\r\n      const {data: res} = await this.$http.delete('categories/' + id)\r\n      console.log(res)\r\n      // 刷新用户列表\r\n      this.getCategoriesList()\r\n      // 关闭 弹框\r\n      this.isDangerEditDialog = false\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .el-card {\r\n    margin-top: 1rem;\r\n  }\r\n  .buttonTop {\r\n    margin-bottom: 1rem;\r\n  }\r\n  .el-pagination {\r\n    margin: 1rem 0;\r\n  }\r\n  .el-cascader {\r\n    width: 100%;\r\n  }\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Categories.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Categories.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Categories.vue?vue&type=template&id=2638a181&scoped=true&\"\nimport script from \"./Categories.vue?vue&type=script&lang=js&\"\nexport * from \"./Categories.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Categories.vue?vue&type=style&index=0&id=2638a181&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2638a181\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","path","_v","on","addCategories","categoriesList","columns","scopedSlots","_u","key","fn","scope","row","cat_deleted","staticStyle","cat_level","$event","ShowCategoriesDialog","cat_id","removeInfoById","queryInfo","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","categoriesDialogVisible","categoriesDialogClose","ref","addCategoriesForm","addCategoriesFormRules","model","value","cat_name","callback","$$v","$set","expression","parentCateList","cascaderProps","expandTrigger","checkStrictly","parentCateChanged","selectedKeys","slot","addCategoriesY","isShowCategoriesEditDialog","CategoriesEditForm","isShowCategoriesFormRules","addCategoriesEditForm","staticRenderFns","data","type","label","prop","template","cat_pid","required","message","trigger","min","max","children","region","isDangerEditDialog","created","methods","params","confirmButtonText","cancelButtonText","component"],"sourceRoot":""}