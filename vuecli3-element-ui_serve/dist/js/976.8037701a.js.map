{"version":3,"file":"js/976.8037701a.js","mappings":"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","sources":["webpack://vuecli2-element-ui/./src/views/roles/Roles.vue","webpack://vuecli2-element-ui/src/views/roles/Roles.vue","webpack://vuecli2-element-ui/./src/views/roles/Roles.vue?6047","webpack://vuecli2-element-ui/./src/views/roles/Roles.vue?d77a"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"roles\"},[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"角色管理\")]),_c('el-breadcrumb-item',[_vm._v(\"角色列表\")])],1),_c('el-card',[_c('el-button',{staticClass:\"buttonTop\",attrs:{\"type\":\"primary\"}},[_vm._v(\"添加角色\")]),_c('el-row',[_c('el-col',[_c('el-table',{attrs:{\"data\":_vm.rolesList,\"stripe\":\"\",\"border\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return _vm._l((scope.row.children),function(item,index){return _c('el-row',{key:item.id,class:['center', 'borderBottom', index === 0 ? 'borderTop' : ''],attrs:{\"closable\":\"\"}},[_c('el-col',{attrs:{\"span\":5}},[_c('el-tag',{attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.removeRightById(scope.row, item.id)}}},[_vm._v(_vm._s(item.authName))]),_c('i',{staticClass:\"el-icon-caret-right\"})],1),_c('el-col',{attrs:{\"span\":19}},_vm._l((item.children),function(item1,index1){return _c('el-row',{key:item1.id,class:[index1 === 0 ? '' : 'borderTop']},[_c('el-col',{attrs:{\"span\":6}},[_c('el-tag',{attrs:{\"closable\":\"\",\"type\":\"success\"},on:{\"close\":function($event){return _vm.removeRightById(scope.row, item1.id)}}},[_vm._v(_vm._s(item1.authName))]),_c('i',{staticClass:\"el-icon-caret-right\"})],1),_c('el-col',{attrs:{\"span\":18}},_vm._l((item1.children),function(item2,index2){return _c('el-tag',{key:item2.id,attrs:{\"type\":\"warning\",\"closable\":\"\"},on:{\"close\":function($event){return _vm.removeRightById(scope.row, item2.id)}}},[_vm._v(_vm._s(item2.authName))])}),1)],1)}),1)],1)})}}])}),_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"#\"}}),_c('el-table-column',{attrs:{\"label\":\"角色名称\",\"prop\":\"roleName\"}}),_c('el-table-column',{attrs:{\"label\":\"角色描述\",\"prop\":\"roleDesc\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"icon\":\"el-icon-edit\",\"type\":\"primary\"}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"icon\":\"el-icon-delete\",\"type\":\"success\"}},[_vm._v(\"删除\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"icon\":\"el-icon-setting\",\"type\":\"info\"},on:{\"click\":function($event){return _vm.showSetRightDialog(scope.row)}}},[_vm._v(\"分配权限\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":\"权限分配对话框\",\"visible\":_vm.dialogVisibleRight,\"width\":\"30%\"},on:{\"close\":_vm.setRightsDialogClose,\"update:visible\":function($event){_vm.dialogVisibleRight=$event}}},[_c('el-tree',{ref:\"treeRef\",attrs:{\"data\":_vm.rightsList,\"props\":_vm.treeProps,\"default-checked-keys\":_vm.defaultKeys,\"default-expand-all\":\"\",\"show-checkbox\":\"\",\"node-key\":\"id\"}}),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisibleRight = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.allotRights}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <!-- 权限管理 roles 角色列表 -->\r\n  <div class=\"roles\">\r\n    <!-- 面包屑导航栏 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>角色管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片 -->\r\n    <el-card>\r\n      <!-- 添加角色 -->\r\n      <el-button class=\"buttonTop\" type=\"primary\">添加角色</el-button>\r\n      <!-- 行 -->\r\n      <el-row>\r\n        <!-- 列 -->\r\n        <el-col  >\r\n          <!-- 表格 角色列表区域-->\r\n          <el-table  :data=\"rolesList\" stripe border>\r\n            <!-- 展开列 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 美化标签 -->\r\n                <!-- <pre>\r\n                  {{scope.row}}\r\n                </pre> -->\r\n                <el-row :class=\"['center', 'borderBottom', index === 0 ? 'borderTop' : '']\" v-for=\"(item,index) in scope.row.children\" :key=\"item.id\" closable >\r\n                  <!-- 一级分类 -->\r\n                  <el-col :span=\"5\" >\r\n                    <!-- tag 标签 -->\r\n                    <el-tag @close=\"removeRightById(scope.row, item.id)\" closable>{{item.authName}}</el-tag>\r\n                    <i class=\"el-icon-caret-right\"></i>\r\n                  </el-col>\r\n                  <!-- 二级和三级分类 -->\r\n                  <el-col :span=\"19\">\r\n                    <el-row :class=\"[index1 === 0 ? '' : 'borderTop']\"  v-for=\"(item1,index1) in item.children\" :key=\"item1.id\"  >\r\n                      <el-col :span=\"6\">\r\n                        <el-tag @close=\"removeRightById(scope.row, item1.id)\" closable type=\"success\" >{{item1.authName}}</el-tag>\r\n                        <i class=\"el-icon-caret-right\"></i>\r\n                      </el-col>\r\n                      <el-col :span=\"18\">\r\n                        <el-tag type=\"warning\" @close=\"removeRightById(scope.row, item2.id)\" v-for=\"(item2,index2) in item1.children\" :key=\"item2.id\" closable >{{item2.authName}}</el-tag>\r\n                      </el-col>\r\n                    </el-row>\r\n                  </el-col>\r\n                </el-row>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n            <el-table-column label=\"角色名称\" prop=\"roleName\"></el-table-column>\r\n            <el-table-column label=\"角色描述\" prop=\"roleDesc\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <!-- slot-scope=\"scope\" 用插槽的形式获取 rolesList -->\r\n              <template  slot-scope=\"scope\">\r\n                <el-button size=\"mini\" icon=\"el-icon-edit\" type=\"primary\" >编辑</el-button>\r\n                <el-button size=\"mini\" icon=\"el-icon-delete\" type=\"success\" >删除</el-button>\r\n                <el-button size=\"mini\" icon=\"el-icon-setting\" type=\"info\" @click=\"showSetRightDialog(scope.row)\" >分配权限</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n\r\n    <!-- 显示分配权限对话框 -->\r\n    <el-dialog title=\"权限分配对话框\" @close=\"setRightsDialogClose\" :visible.sync=\"dialogVisibleRight\" width=\"30%\" >\r\n      <!-- Tree 树形控件 data 绑定数据   props 用于父子间的嵌套(显示文本) -->\r\n      <el-tree :data=\"rightsList\" :props=\"treeProps\" ref=\"treeRef\" :default-checked-keys=\"defaultKeys\" default-expand-all show-checkbox node-key=\"id\"></el-tree>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisibleRight = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\r\n      </span>\r\n  </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 用户列表数据\r\n      rolesList: [],\r\n      // 是否显示分配权限对话框 点击分配权限\r\n      dialogVisibleRight : false,\r\n      // tree树 权限列表数据\r\n      rightsList: [],\r\n      // tree树 用于父子间的嵌套\r\n      treeProps: {\r\n        // 显示的文本\r\n        label: 'authName',\r\n        // 父子嵌套的名字\r\n        children: 'children',\r\n      },\r\n      // tree树 默认选中的节点id值数组\r\n      defaultKeys: [],\r\n      // 即将分配权限的id\r\n      roleId: ''\r\n\r\n    }\r\n  },\r\n  created() {\r\n    this.getRolesList()\r\n  },\r\n  methods: {\r\n    // 获取用户列表数据\r\n    async getRolesList() {\r\n      const {data: res} = await this.$http.get('roles')\r\n      console.log(res)\r\n      if (res.meta.status !== 200) {\r\n        return this.$notify.success('获取角色列表失败')\r\n      }\r\n      this.$message.info(res.meta.msg)\r\n      this.rolesList = res.data\r\n    },\r\n    // 根据id删除权限 点击展开列 里面的每一个关闭 tag标签  role角色 id对应要删除的权限\r\n    async removeRightById(role, rightId) {\r\n      // 1 点击删除 先弹出提示框\r\n      const confirmDetele = await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => {\r\n        return err                   // cancel\r\n      })\r\n      if (confirmDetele !== 'confirm') {\r\n        return this.$notify.success('取消了删除')\r\n      }\r\n      console.log(confirmDetele)      // confirm\r\n      this.$message.info('点击了确认 打印' + confirmDetele)\r\n      // 2 根据id 删除对应的角色\r\n      const { data: res} = await this.$http.delete(`roles/${role.id}/rights/${rightId}`)\r\n      console.log(res)\r\n      if (res.meta.status !== 200) return this.$message.info('删除失败')\r\n      this.$alert('删除成功了')\r\n      // 重新刷新数据列表  用户体验不好 下面代码代替\r\n      // this.getRolesList()\r\n      // 刷新页面不关闭 tag标签页\r\n      role.children = res.data\r\n    },\r\n    // 显示设置权限对话框(tree树形控件)  点击分配权限\r\n    async showSetRightDialog(role) {\r\n\r\n      this.roleId = role.id\r\n      \r\n      // 获取所有权限数据 \r\n      const {data: res} = await this.$http.get('rights/tree') \r\n      console.log(res)\r\n      if (res.meta.status !== 200) return this.$message.error('获取权限失败')\r\n      this.rightsList = res.data\r\n      // 递归获取三级节点的id\r\n      this.getDefaultKeys(role, this.defaultKeys)\r\n      // 显示分配权限对话框\r\n      this.dialogVisibleRight = true\r\n    },\r\n    // tree树 把tree树中的小括号勾选起来 通过递归的形式 获取角色下的所有三级权限的id 并保存到defaultKeys中\r\n    // node用户判断是否是三级节点  arr保存到的数组中\r\n    getDefaultKeys(node, arr) {\r\n      // 如果 node.children node有children属性  说明node不是三级节点 然后取反\r\n      if (!node.children) {\r\n        // 是三级节点 把数据push到arr中\r\n        return arr.push(node.id)\r\n      }\r\n      // 不是三级点击 使用递归处理\r\n      node.children.forEach(item => \r\n        // 然后把item当成节点保存到arr中\r\n      this.getDefaultKeys(item, arr)) \r\n      \r\n    },\r\n    // 关闭分配权限对话框 时触发\r\n    setRightsDialogClose() {\r\n      // 清空之前添加的权限id 不然会一直添加\r\n      this.defaultKeys = []\r\n    },\r\n    // 点击分配权限 对话框里面的确定  添加角色的权限\r\n    async allotRights() {\r\n      // 获取半选和全选的引用\r\n      const keys = [\r\n        ...this.$refs.treeRef.getCheckedKeys(),\r\n        ...this.$refs.treeRef.getHalfCheckedKeys()\r\n      ]\r\n      console.log(keys)\r\n      // 数组转换为字符串 使用join方法拼接\r\n      const idString = keys.join(',')\r\n\r\n      // 发起修改数据的请求\r\n      const {data: res} = await this.$http.post(`roles/${this.roleId}/rights`,{rids: idString})\r\n      console.log(res)\r\n      if(res.meta.status !== 200) return this.$message.error('获取角色权限失败')\r\n      this.$message.info(res.meta.msg)\r\n      // 刷新列表\r\n      this.getRolesList()\r\n      // 关闭对话框\r\n      this.dialogVisibleRight = false\r\n    }\r\n\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-card {\r\n  margin-top: 1rem;\r\n}\r\n.buttonTop {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.center {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.borderTop {\r\n  border-top: 1px solid #eee;\r\n  /* margin: .4rem 0; */\r\n}\r\n.borderBottom {\r\n  border-bottom: 1px solid #eee;\r\n  /* margin-top: .4rem; */\r\n}\r\n.el-tag {\r\n  margin: .4rem;\r\n}\r\n\r\n\r\n\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Roles.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Roles.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Roles.vue?vue&type=template&id=39deb78a&scoped=true&\"\nimport script from \"./Roles.vue?vue&type=script&lang=js&\"\nexport * from \"./Roles.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Roles.vue?vue&type=style&index=0&id=39deb78a&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"39deb78a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","path","_v","rolesList","scopedSlots","_u","key","fn","scope","_l","row","children","item","index","id","class","on","$event","removeRightById","_s","authName","item1","index1","item2","index2","showSetRightDialog","dialogVisibleRight","setRightsDialogClose","ref","rightsList","treeProps","defaultKeys","slot","allotRights","staticRenderFns","data","label","roleId","created","methods","confirmButtonText","cancelButtonText","type","role","getDefaultKeys","node","rids","component"],"sourceRoot":""}